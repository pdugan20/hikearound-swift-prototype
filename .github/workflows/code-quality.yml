name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0'

    - name: Install SwiftLint
      run: |
        brew install swiftlint

    - name: Install swift-format
      run: |
        brew install swift-format

    - name: Cache SwiftLint
      uses: actions/cache@v4
      with:
        path: ~/.cache/swiftlint
        key: ${{ runner.os }}-swiftlint-${{ hashFiles('.swiftlint.yml') }}

    - name: Run swift-format (check only)
      run: |
        swift-format lint -r hikearound-prototype/

    - name: Run SwiftLint
      run: |
        swiftlint lint hikearound-prototype/ --reporter github-actions-logging

    - name: Build for iOS Simulator
      run: |
        xcodebuild build \
          -project hikearound-prototype.xcodeproj \
          -scheme hikearound-prototype \
          -destination 'platform=iOS Simulator,name=iPhone 16' \
          -configuration Debug \
          CODE_SIGNING_ALLOWED=NO

  test:
    name: Unit Tests
    runs-on: macos-latest
    needs: code-quality

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0'

    - name: Run Unit Tests
      run: |
        xcodebuild test \
          -project hikearound-prototype.xcodeproj \
          -scheme hikearound-prototype \
          -destination 'platform=iOS Simulator,name=iPhone 16' \
          -configuration Debug \
          CODE_SIGNING_ALLOWED=NO \
          -resultBundlePath TestResults.xcresult

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults.xcresult
